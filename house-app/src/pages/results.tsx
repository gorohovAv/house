import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  CupGoldIcon,
  CupSilverIcon,
  CupBronzeIcon,
  MedalIcon,
} from "../components/Icons";
import type { ResultItem, ConstructionResult } from "../types/api";
import { useOnboardingStore } from "../store/onboardingStore";
import "./results.css";

// –ë–∞–∑–æ–≤—ã–π URL API
const API_URL =
  window.location.hostname === "localhost" ||
  window.location.hostname === "127.0.0.1" ||
  window.location.hostname === "10.92.50.3" // –º–µ–Ω—è–µ–º –∑–¥–µ—Å—å
    ? `http://${window.location.hostname}:8080/api`
    : "https://scheduler-assistant.ru/api";

const Results: React.FC = () => {
  const [results, setResults] = useState<ResultItem[]>([]);
  const [loading, setLoading] = useState(true);
  const [showCongratsModal, setShowCongratsModal] = useState(false);
  const navigate = useNavigate();
  const { projectName } = useOnboardingStore();

  useEffect(() => {
    const fetchResults = async () => {
      try {
        const response = await fetch(`${API_URL}/results`);
        if (!response.ok) {
          throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤");
        }

        const data: ConstructionResult[] = await response.json();

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –æ—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–º–∞
        const resultsWithPosition: ResultItem[] = data.map(
          (item: ConstructionResult, index: number) => ({
            ...item,
            position: index + 1,
            isCurrentUser: item.name === projectName, // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–º–∞
          })
        );

        setResults(resultsWithPosition);
        setLoading(false);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (resultsWithPosition.length > 0) {
          const currentUser = resultsWithPosition.find((r) => r.isCurrentUser);
          if (currentUser && currentUser.position === 1) {
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª–∫–∏
            setTimeout(() => {
              setShowCongratsModal(true);
            }, 100);
          }
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:", error);

        // Fallback –Ω–∞ –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
        const mockResults: ResultItem[] = [
          {
            id: 1,
            position: 1,
            name: "–ú–æ–π –¥–æ–º",
            isCurrentUser: true,
            planned_duration: 90,
            planned_cost: 50000,
            actual_duration: 95,
            actual_cost: 52000,
            cost_difference: 2000,
            duration_difference: 5,
            created_at: new Date().toISOString(),
          },
          {
            id: 2,
            position: 2,
            name: "–£—Å–∞–¥—å–±–∞ –í–∞—Å–Ω–µ—Ü–æ–≤–∞",
            isCurrentUser: false,
            planned_duration: 90,
            planned_cost: 50000,
            actual_duration: 95,
            actual_cost: 52000,
            cost_difference: 2000,
            duration_difference: 5,
            created_at: new Date().toISOString(),
          },
          {
            id: 3,
            position: 3,
            name: "–î–æ–º–∏–∫ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∞",
            isCurrentUser: false,
            planned_duration: 90,
            planned_cost: 50000,
            actual_duration: 100,
            actual_cost: 55000,
            cost_difference: 5000,
            duration_difference: 10,
            created_at: new Date().toISOString(),
          },
        ];

        setResults(mockResults);
        setLoading(false);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—Ç–∞ –≤ fallback –¥–∞–Ω–Ω—ã—Ö
        const currentUser = mockResults.find((r) => r.isCurrentUser);
        if (currentUser && currentUser.position === 1) {
          setTimeout(() => {
            setShowCongratsModal(true);
          }, 100);
        }
      }
    };

    fetchResults();
  }, []);

  const getIconForPosition = (position: number) => {
    if (position === 1) return <CupGoldIcon />;
    if (position === 2) return <CupSilverIcon />;
    if (position === 3) return <CupBronzeIcon />;
    return <MedalIcon />;
  };

  const handlePlayAgain = () => {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞—á–∞–ª—É –∏–≥—Ä—ã (–æ–Ω–±–æ—Ä–¥–∏–Ω–≥)
    navigate("/");
  };

  if (loading) {
    return (
      <div className="results-container">
        <div className="results-loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...</div>
      </div>
    );
  }

  return (
    <div className="results-container">
      <div className="results-header">
        <h1 className="results-title">–†–µ–π—Ç–∏–Ω–≥</h1>
      </div>

      <div className="results-content">
        {results.map((result) => (
          <div
            key={result.id}
            className={`results-item ${
              result.isCurrentUser ? "results-item-current" : ""
            }`}
          >
            <span className="results-position">{result.position}</span>
            <div className="results-icon">
              {getIconForPosition(result.position)}
            </div>
            <span className="results-name">{result.name}</span>
          </div>
        ))}

        {/*results.length > 10 && (
          <div className="results-item results-item-last">
            <span className="results-position">
              {results[results.length - 1].position}
            </span>
            <div className="results-icon">
              {getIconForPosition(results[results.length - 1].position)}
            </div>
            <span className="results-name">
              {results[results.length - 1].name}
            </span>
          </div>
        )*/}
      </div>
      {/* 
      <button className="results-play-again" onClick={handlePlayAgain}>
        –ò–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ
      </button>*/}

      {/* –ú–æ–¥–∞–ª–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è */}
      {showCongratsModal && (
        <div className="congrats-modal-overlay">
          <div className="congrats-modal">
            <div className="congrats-header">
              <CupGoldIcon />
              <h2 className="congrats-title">1 –º–µ—Å—Ç–æ</h2>
            </div>
            <h3 className="congrats-subtitle">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâüè†</h3>
            <p className="congrats-text">
              –¢—ã –ø–æ—Å—Ç—Ä–æ–∏–ª —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–æ–º! –û—Ç –∑–∞–ª–∏–≤–∫–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ —É—é—Ç–Ω–æ–≥–æ
              –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Äî —Ç—ã –ø—Ä–æ–¥–µ–ª–∞–ª –æ–≥—Ä–æ–º–Ω—ã–π –ø—É—Ç—å. –¢–µ–ø–µ—Ä—å –≤ —ç—Ç–æ–º –¥–æ–º–µ
              –∂–∏–≤—É—Ç —Ç–≤–æ–∏ —Å—Ç–∞—Ä–∞–Ω–∏—è –∏ —É—Å–µ—Ä–¥–∏–µ!
            </p>
            <button
              className="congrats-close"
              onClick={() => setShowCongratsModal(false)}
            >
              ‚úï
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Results;
